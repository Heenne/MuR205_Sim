local_costmap:
    global_frame: $(arg tf_prefix)odom # Before there was odom_comb
    rolling_window: true
    raytrace_range: 6.0
    resolution: 0.05
    z_resolution: 0.15
    z_voxels: 8
    inflation:
      cost_scaling_factor: 10.0  # Exponential rate at which the obstacle cost drops off (default: 10). Must be chosen so that the cost value is > 0 at robot's circumscribed radius.
      inflation_radius:     0.6  # Max. distance from an obstacle at which costs are incurred for planning paths. Must be > robot's circumscribed radius.
    width: 4.0
    height: 4.0
    origin_x: 0.0
    origin_y: 0.0
    plugins: 
      - name: static_map
        type: "costmap_2d::StaticLayer"
      - name: obstacles
        type: "costmap_2d::VoxelLayer"
      - name: inflation
        type: "costmap_2d::InflationLayer"



# local_costmap:
#   update_frequency: 5.0
#   publish_frequency: 2.0
#   rolling_window: true
#   width: 6.0
#   height: 6.0
#   resolution: 0.05
#   plugins: 
#   - name: static_map
#     type: "costmap_2d::StaticLayer"
#   - name: obstacles
#     type: "costmap_2d::VoxelLayer"
#   - name: inflation
#     type: "costmap_2d::InflationLayer"
  
#   obstacles:
#     # uncomment picco_flexx to use it for calculatig the costmaps
#     # TODO: filtering picco_flexx to avoid noise in costmap
#     observation_sources: sick_tim #pico_flexx
#     sick_tim: {sensor_frame: laser, data_type: LaserScan, topic: scan, marking: true, clearing: true}
#     #pico_flexx: {sensor_frame: pico_flexx_optical_frame, data_type: LaserScan, topic: pico_flexx_scan, marking: true, clearing: true}
#     max_obstacle_height: 0.4
#     z_resolution: 0.05
#     z_voxels: 10
#     publish_voxel_map: true
#   inflation:
#     inflation_radius: 0.35